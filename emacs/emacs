;;; .emacs -- my emacs conf
;;; Commentary:

;;; Code:
;; opposite of C-x o

(require 'org)
(require 'ob-tangle)
(org-babel-load-file "~/src/dotfiles/emacs/config.org")

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   (quote
    ("e61752b5a3af12be08e99d076aedadd76052137560b7e684a8be2f8d2958edc3" "274fa62b00d732d093fc3f120aca1b31a6bb484492f31081c1814a858e25c72e" "13d20048c12826c7ea636fbe513d6f24c0d43709a761052adbca052708798ce3" "26d49386a2036df7ccbe802a06a759031e4455f07bda559dcf221f53e8850e69" default)))
 '(haskell-process-type (quote cabal-new-repl))
 '(inhibit-default-init t)
 '(inhibit-startup-buffer-menu t)
 '(inhibit-startup-echo-area-message nil)
 '(inhibit-startup-screen t)
 '(org-export-backends (quote (ascii beamer html icalendar latex odt s5 twbs)))
 '(package-selected-packages
   (quote
    (evil pdf-tools powerline ox-twbs htmlize magit smex flycheck-elm elm-mode highlight-indentation pylint go-eldoc flycheck-golangci-lint go-complete moe-theme rust-mode nix-mode nixos-options auctex git dracula-theme haskell-mode haskell-emacs go-mode vmd-mode markdown-preview-eww markdown-preview-mode markdown-mode+ markdown-mode yaml-mode)))
 '(vc-follow-symlinks nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; Yaml mode
(require 'yaml-mode)
(add-to-list 'auto-mode-alist '("\\.yml\\'" . yaml-mode))

(add-hook 'yaml-mode-hook
    '(lambda ()
       (define-key yaml-mode-map "\C-m" 'newline-and-indent)))

(require 'haskell-interactive-mode)
(require 'haskell-process)
(add-hook 'haskell-mode-hook 'interactive-haskell-mode)

;; provides type info at cursor
(require 'go-eldoc)
(add-hook 'go-mode-hook 'go-eldoc-setup)

;; provides completions on M-tab
(require 'go-complete)
(add-hook 'completion-at-point-functions 'go-complete-at-point)

;; gofmt on save
(defun my-go-mode-hook ()
  "Use goimports instead of go-fmt."
  (setq gofmt-command "goimports")
  ; Call Gofmt before saving
  (add-hook 'before-save-hook 'gofmt-before-save)
  ; Customize compile command to run go build
  (if (not (string-match "go" compile-command))
      (set (make-local-variable 'compile-command)
	   "go build -v && go test -v && go vet"))
  ; Godef jump key binding
  (local-set-key (kbd "M-.") 'godef-jump)
  (local-set-key (kbd "M-*") 'pop-tag-mark)
)
(add-hook 'go-mode-hook 'my-go-mode-hook)

(require 'python)
(setq python-shell-interpreter "python3")

;; FlyCheck (error checking, and error checking checking)
(require 'flycheck)
(setq flycheck-python-pycompile-executable "python3")
(add-hook 'after-init-hook #'global-flycheck-mode)
(eval-after-load 'flycheck
  '(add-hook 'flycheck-mode-hook #'flycheck-golangci-lint-setup))


;; ido
(require 'ido)
(ido-mode 1)
(setq ido-enable-flex-matching t) ;; enable fuzzy matching
;; idomenu
(autoload 'idomenu "idomenu" nil t)


(smex-initialize)
(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)

;; magit
(require 'magit)
(global-set-key (kbd "C-x g") 'magit-status)

(load-theme 'misterioso)

(org-babel-do-load-languages
 'org-babel-load-languages
 '(
   (python . t)
   (haskell . t)
   ))

;; powerline
(require 'powerline)
(powerline-default-theme)

;; fixing path
(if (string-equal "darwin" (symbol-name system-type))
    (setenv "PATH" (concat "/usr/local/bin:/usr/local/sbin:/Library/TeX/texbin:"
			   (getenv "PATH"))))

;; pdf-tools
(pdf-loader-install)

;; disable linum for certain modes
(add-hook 'term-mode-hook 'my-inhibit-global-linum-mode)
(add-hook 'pdf-view-mode-hook 'my-inhibit-global-linum-mode)
(defun my-inhibit-global-linum-mode ()
  "Counter-act function `global-linum-mode'."
  (add-hook 'after-change-major-mode-hook
	    (lambda () (linum-mode 0))
	    :append :local))



(provide '.emacs)
;;; .emacs ends here
